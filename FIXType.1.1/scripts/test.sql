-- Generated by BladeSmith 4.00.TC1B2DO NOT MODIFY. --

execute procedure ifx_allow_newline('t');

begin work;

create opaque type FIXType(
	internallength = 16,
	alignment = 4
);

grant usage on type FIXType to public;

create function FIXTypeIn (lvarchar)
returns FIXType
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeInput)" language c;

alter function FIXTypeIn (lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeInput)");

grant execute on function FIXTypeIn (lvarchar) to public;

create implicit cast
	(
		lvarchar as FIXType
		with  FIXTypeIn
	);

create function FIXTypeOut (FIXType)
returns lvarchar
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeOutput)" language c;

alter function FIXTypeOut (FIXType)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeOutput)");

grant execute on function FIXTypeOut (FIXType) to public;

create cast
	(
		FIXType as lvarchar
		with  FIXTypeOut
	);

create function FIXTypeSend (FIXType)
returns sendrecv
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeSend)" language c;

alter function FIXTypeSend (FIXType)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeSend)");

grant execute on function FIXTypeSend (FIXType) to public;

create cast
	(
		FIXType as sendrecv
		with  FIXTypeSend
	);

create function FIXTypeRecv (sendrecv)
returns FIXType
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeReceive)" language c;

alter function FIXTypeRecv (sendrecv)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeReceive)");

grant execute on function FIXTypeRecv (sendrecv) to public;

create implicit cast
	(
		sendrecv as FIXType
		with  FIXTypeRecv
	);

create function FIXTypeImpT (impexp)
returns FIXType
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeImportText)" language c;

alter function FIXTypeImpT (impexp)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeImportText)");

grant execute on function FIXTypeImpT (impexp) to public;

create implicit cast
	(
		impexp as FIXType
		with  FIXTypeImpT
	);

create function FIXTypeExpT (FIXType)
returns impexp
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeExportText)" language c;

alter function FIXTypeExpT (FIXType)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeExportText)");

grant execute on function FIXTypeExpT (FIXType) to public;

create cast
	(
		FIXType as impexp
		with  FIXTypeExpT
	);

create function FIXTypeImpB (impexpbin)
returns FIXType
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeImportBinary)" language c;

alter function FIXTypeImpB (impexpbin)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeImportBinary)");

grant execute on function FIXTypeImpB (impexpbin) to public;

create implicit cast
	(
		impexpbin as FIXType
		with  FIXTypeImpB
	);

create function FIXTypeExpB (FIXType)
returns impexpbin
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeExportBinary)" language c;

alter function FIXTypeExpB (FIXType)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeExportBinary)");

grant execute on function FIXTypeExpB (FIXType) to public;

create cast
	(
		FIXType as impexpbin
		with  FIXTypeExpB
	);

create function Compare (FIXType,FIXType)
returns integer
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeCompare)" language c;

alter function Compare (FIXType,FIXType)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeCompare)");

alter function Compare (FIXType,FIXType)
	with (add not variant);

grant execute on function Compare (FIXType,FIXType) to public;

create function Equal (FIXType,FIXType)
returns boolean
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeEqual)" language c;

alter function Equal (FIXType,FIXType)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeEqual)");

alter function Equal (FIXType,FIXType)
	with (add not variant);

grant execute on function Equal (FIXType,FIXType) to public;

create function NotEqual (FIXType,FIXType)
returns boolean
external name "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeNotEqual)" language c;

alter function NotEqual (FIXType,FIXType)
	with (Modify External Name = "$INFORMIXDIR/extend/FIXType.1.1/FIXType.bld(FIXTypeNotEqual)");

alter function NotEqual (FIXType,FIXType)
	with (add not variant);

grant execute on function NotEqual (FIXType,FIXType) to public;

commit work;

