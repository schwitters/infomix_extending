-- Generated by BladeSmith 4.00.TC2  DO NOT MODIFY. --

execute procedure ifx_allow_newline('t');

begin work;

create function ascii (char)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_ascii)" language c;

alter function ascii (char)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_ascii)");

alter function ascii (char)
	with (add parallelizable);

alter function ascii (char)
	with (add not variant);

grant execute on function ascii (char) to public;

create function ceil (double precision)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_ceil)" language c;

alter function ceil (double precision)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_ceil)");

alter function ceil (double precision)
	with (add parallelizable);

alter function ceil (double precision)
	with (add not variant);

grant execute on function ceil (double precision) to public;

create function chr (integer)
returns char
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_chr)" language c;

alter function chr (integer)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_chr)");

alter function chr (integer)
	with (add parallelizable);

alter function chr (integer)
	with (add not variant);

grant execute on function chr (integer) to public;

create function instr (lvarchar,lvarchar)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instr_2)" language c;

alter function instr (lvarchar,lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instr_2)");

alter function instr (lvarchar,lvarchar)
	with (add parallelizable);

alter function instr (lvarchar,lvarchar)
	with (add not variant);

grant execute on function instr (lvarchar,lvarchar) to public;

create function instr (lvarchar,lvarchar,integer)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instr_3)" language c;

alter function instr (lvarchar,lvarchar,integer)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instr_3)");

alter function instr (lvarchar,lvarchar,integer)
	with (add parallelizable);

alter function instr (lvarchar,lvarchar,integer)
	with (add not variant);

grant execute on function instr (lvarchar,lvarchar,integer) to public;

create function instr (lvarchar,lvarchar,integer,integer)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instr_4)" language c;

alter function instr (lvarchar,lvarchar,integer,integer)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instr_4)");

alter function instr (lvarchar,lvarchar,integer,integer)
	with (add parallelizable);

alter function instr (lvarchar,lvarchar,integer,integer)
	with (add not variant);

grant execute on function instr (lvarchar,lvarchar,integer,integer) to public;

create function instrb (lvarchar,lvarchar)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instrb_2)" language c;

alter function instrb (lvarchar,lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instrb_2)");

alter function instrb (lvarchar,lvarchar)
	with (add parallelizable);

alter function instrb (lvarchar,lvarchar)
	with (add not variant);

grant execute on function instrb (lvarchar,lvarchar) to public;

create function instrb (lvarchar,lvarchar,integer)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instrb_3)" language c;

alter function instrb (lvarchar,lvarchar,integer)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instrb_3)");

alter function instrb (lvarchar,lvarchar,integer)
	with (add parallelizable);

alter function instrb (lvarchar,lvarchar,integer)
	with (add not variant);

grant execute on function instrb (lvarchar,lvarchar,integer) to public;

create function instrb (lvarchar,lvarchar,integer,integer)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instrb_4)" language c;

alter function instrb (lvarchar,lvarchar,integer,integer)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_instrb_4)");

alter function instrb (lvarchar,lvarchar,integer,integer)
	with (add parallelizable);

alter function instrb (lvarchar,lvarchar,integer,integer)
	with (add not variant);

grant execute on function instrb (lvarchar,lvarchar,integer,integer) to public;

create function sign (double precision)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_sign)" language c;

alter function sign (double precision)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_sign)");

alter function sign (double precision)
	with (add parallelizable);

alter function sign (double precision)
	with (add not variant);

grant execute on function sign (double precision) to public;

create procedure SqlLibC_Trace (lvarchar,integer)
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(TraceSet_SqlLibC)" language c;

alter procedure SqlLibC_Trace (lvarchar,integer)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(TraceSet_SqlLibC)");

grant execute on procedure SqlLibC_Trace (lvarchar,integer) to public;

create function to_integer (lvarchar)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_integer)" language c;

alter function to_integer (lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_integer)");

alter function to_integer (lvarchar)
	with (add parallelizable);

alter function to_integer (lvarchar)
	with (add not variant);

grant execute on function to_integer (lvarchar) to public;

create function to_float (lvarchar)
returns float
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_float)" language c;

alter function to_float (lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_float)");

alter function to_float (lvarchar)
	with (add parallelizable);

alter function to_float (lvarchar)
	with (add not variant);

grant execute on function to_float (lvarchar) to public;

create function to_decimal (lvarchar)
returns decimal
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_decimal)" language c;

alter function to_decimal (lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_decimal)");

alter function to_decimal (lvarchar)
	with (add parallelizable);

alter function to_decimal (lvarchar)
	with (add not variant);

grant execute on function to_decimal (lvarchar) to public;

create function to_decimal (lvarchar,lvarchar)
returns decimal
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_decimal_fmt)" language c;

alter function to_decimal (lvarchar,lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_decimal_fmt)");

alter function to_decimal (lvarchar,lvarchar)
	with (add parallelizable);

alter function to_decimal (lvarchar,lvarchar)
	with (add handlesnulls);

alter function to_decimal (lvarchar,lvarchar)
	with (add not variant);

grant execute on function to_decimal (lvarchar,lvarchar) to public;

create function to_float (lvarchar,lvarchar)
returns float
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_float_fmt)" language c;

alter function to_float (lvarchar,lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_float_fmt)");

alter function to_float (lvarchar,lvarchar)
	with (add parallelizable);

alter function to_float (lvarchar,lvarchar)
	with (add handlesnulls);

alter function to_float (lvarchar,lvarchar)
	with (add not variant);

grant execute on function to_float (lvarchar,lvarchar) to public;

create function to_integer (lvarchar,lvarchar)
returns integer
external name "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_integer_fmt)" language c;

alter function to_integer (lvarchar,lvarchar)
	with (Modify External Name = "$INFORMIXDIR/extend/SqlLibC.1.1/SqlLibC.bld(SqlLibC_to_integer_fmt)");

alter function to_integer (lvarchar,lvarchar)
	with (add parallelizable);

alter function to_integer (lvarchar,lvarchar)
	with (add handlesnulls);

alter function to_integer (lvarchar,lvarchar)
	with (add not variant);

grant execute on function to_integer (lvarchar,lvarchar) to public;

--
-- Add statements for supporting Tracing.
--
insert into systraceclasses (name) values ('SqlLibC');

insert into systracemsgs (name, locale, message)
values
("SqlLibC_UDR_ENTER", "en_us.8859-1",
"%UDRNAME%: function entry."
);

insert into systracemsgs (name, locale, message)
values
("SqlLibC_UDR_EXIT", "en_us.8859-1",
"%UDRNAME%: function exit."
);
create function sqllibc_raise_err(error_code integer)
returning integer;
        raise exception error_code;
         return error_code;
end function;                         
insert into informix.syserrors
	(level, seqno, sqlstate, locale, message)
values
(
	0, 1, "USQ01", "en_us.8859-1", "%UDRNAME%: Input value %VALUE% outside range of %RANGE%."
);

insert into informix.syserrors
	(level, seqno, sqlstate, locale, message)
values
(
	0, 1, "USQ02", "en_us.8859-1", "%UDRNAME%: %FEATURE% not implemented yet."
);

insert into informix.syserrors
	(level, seqno, sqlstate, locale, message)
values
(
	0, 1, "USQ03", "en_us.8859-1", "%UDRNAME%: %GLS_CALL% caused GLS error '%GLS_ERROR%'."
);

insert into informix.syserrors
	(level, seqno, sqlstate, locale, message)
values
(
	0, 1, "USQ04", "en_us.8859-1", "%UDRNAME%: input value '%VALUE%' resulted in internal api error %ERROR%."
);

insert into informix.syserrors
	(level, seqno, sqlstate, locale, message)
values
(
	0, 1, "USQ05", "en_us.8859-1", "%UDRNAME%: argument %ARGUMENT% is NULL but requires a valid value."
);

commit work;

