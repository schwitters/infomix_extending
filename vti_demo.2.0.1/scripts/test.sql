-- Generated by BladeSmith 4.00.TC1B2DO NOT MODIFY. --

execute procedure ifx_allow_newline('t');

begin work;

create function demo_am_beginscan (pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_beginscan)" language c;

alter function demo_am_beginscan (pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_beginscan)");

alter function demo_am_beginscan (pointer)
	with (add class="IDN");

grant execute on function demo_am_beginscan (pointer) to public;

create function demo_am_getnext (pointer,pointer,pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_getnext)" language c;

alter function demo_am_getnext (pointer,pointer,pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_getnext)");

alter function demo_am_getnext (pointer,pointer,pointer)
	with (add class="IDN");

grant execute on function demo_am_getnext (pointer,pointer,pointer) to public;

create function demo_am_getbyid (pointer,pointer,pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_getbyid)" language c;

alter function demo_am_getbyid (pointer,pointer,pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_getbyid)");

alter function demo_am_getbyid (pointer,pointer,pointer)
	with (add class="IDN");

grant execute on function demo_am_getbyid (pointer,pointer,pointer) to public;

create function demo_am_endscan (pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_endscan)" language c;

alter function demo_am_endscan (pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_endscan)");

alter function demo_am_endscan (pointer)
	with (add class="IDN");

grant execute on function demo_am_endscan (pointer) to public;

create function demo_am_close (pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_close)" language c;

alter function demo_am_close (pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_close)");

alter function demo_am_close (pointer)
	with (add class="IDN");

grant execute on function demo_am_close (pointer) to public;

create function demo_am_drop (pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_drop)" language c;

alter function demo_am_drop (pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_drop)");

alter function demo_am_drop (pointer)
	with (add class="IDN");

grant execute on function demo_am_drop (pointer) to public;

create function demo_am_stats (pointer,pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_stats)" language c;

alter function demo_am_stats (pointer,pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_stats)");

alter function demo_am_stats (pointer,pointer)
	with (add class="IDN");

grant execute on function demo_am_stats (pointer,pointer) to public;

create function demo_am_check (pointer,integer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_check)" language c;

alter function demo_am_check (pointer,integer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_check)");

alter function demo_am_check (pointer,integer)
	with (add class="IDN");

grant execute on function demo_am_check (pointer,integer) to public;

create function demo_am_scancost (pointer,pointer)
returns real
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_scancost)" language c;

alter function demo_am_scancost (pointer,pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_scancost)");

alter function demo_am_scancost (pointer,pointer)
	with (add class="IDN");

grant execute on function demo_am_scancost (pointer,pointer) to public;

create function demo_am_create (pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_create)" language c;

alter function demo_am_create (pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_create)");

alter function demo_am_create (pointer)
	with (add class="IDN");

grant execute on function demo_am_create (pointer) to public;

create function demo_am_open (pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_open)" language c;

alter function demo_am_open (pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_open)");

alter function demo_am_open (pointer)
	with (add class="IDN");

grant execute on function demo_am_open (pointer) to public;

create function demo_am_insert (pointer,pointer,pointer)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_insert)" language c;

alter function demo_am_insert (pointer,pointer,pointer)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_insert)");

alter function demo_am_insert (pointer,pointer,pointer)
	with (add class="IDN");

grant execute on function demo_am_insert (pointer,pointer,pointer) to public;

create function demo_am_update (pointer,pointer,int)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_update)" language c;

alter function demo_am_update (pointer,pointer,int)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_update)");

alter function demo_am_update (pointer,pointer,int)
	with (add class="IDN");

grant execute on function demo_am_update (pointer,pointer,int) to public;

create function demo_am_delete (pointer,int)
returns int
external name "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_delete)" language c;

alter function demo_am_delete (pointer,int)
	with (Modify External Name = "$INFORMIXDIR/extend/vti_demo.2.0.1/vti_demo.bld(demo_am_delete)");

alter function demo_am_delete (pointer,int)
	with (add class="IDN");

grant execute on function demo_am_delete (pointer,int) to public;

create primary access_method demo_am
(
am_beginscan = demo_am_beginscan,
am_check = demo_am_check,
am_close = demo_am_close,
am_create = demo_am_create,
am_delete = demo_am_delete,
am_drop = demo_am_drop,
am_endscan = demo_am_endscan,
am_getbyid = demo_am_getbyid,
am_getnext = demo_am_getnext,
am_insert = demo_am_insert,
am_open = demo_am_open,
am_scancost = demo_am_scancost,
am_stats = demo_am_stats,
am_update = demo_am_update,
am_rowids,
am_readwrite,
am_sptype = 'x'
);

commit work;

