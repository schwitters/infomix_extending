
To run this demo:

0. This demo requires an instance of the named virtual processor class
   "IDN". Edit your $INFORMIXDIR/etc/onconfig file, and add the 
   following line to the end of it:

        VPCLASS         IDN,noyield,num=1   # some of the idn demos use this

   Now restart your server (onmode -k, followed by oninit)

1. Install the DataBlade on your server. As user informix:

   a. Create a new installation directory: $INFORMIXDIR/extend/idn_socket1.1.1

   b. Copy the files in the "scripts" directory to the new DataBlade 
      installation directory.

   c. Copy the shared object file (.../src/solaris-sparc/idn_socket1.bld) 
      to the new DataBlade installation directory.

2. In one window, start the socket server. The source, executable, and compile
   script are in the demo1/src/c directory:

     % idn_sockserver1

     Socket server starting...
     Socket server listening on port 5432

   The socket server port number is assigned at runtime. Use this number
   as the argument to "main.sh" in the next step.
     
3. In another window, where your process is set up to access your Informix
   installation, run the "main.sh" script:

     % main.sh 5432

   Where "5432" is the port number reported by idn_sockserver1.

   After some setup steps, dbaccess is called and passed the demo.sql
   script, which contains a series of calls to the idnCallSocket1() 
   function. The output is written to "demo.out", which is displayed
   after the script completes.

   You'll also see some feedback at the socket server as it receives
   and responds to messages sent to it by the DataBlade.
  
   Did you get the correct output? Your "demo.out" file should look
   something like the "demo.out.sample" file in this directory.

4. You can use dbaccess or sqleditor to send your own requests to the
   socket server. For example:

      % dbaccess sock1demodb -
      execute function idnCallSocket1(5432, "This is a text string");

   (Be sure to replace "5432" in the above example with the socket server's
   actual port number.)

5. When you're done, shut down the socket server with ^C. You can drop the
   "sock1demodb" database and clean up the demo's temp files by running the
   "cleanup.sh" script.


