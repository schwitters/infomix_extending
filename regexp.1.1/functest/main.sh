#!/bin/sh
## ###############################################################
## 
## Module          : Functional Test for regexp DataBlade module
## Filename        : main.sh
## Author          : generated by DBDK
## PURPOSE
##    Testsuite driver. This file lets you run all the tests
##    for vix_blob_am.
##    The following command line options are supported:
##
##      main.sh all
##          Builds, runs all tests and cleans up. A shortcut
##          for invoking the "build", "run" and "clean" target.
##      main.sh build
##          Runs the setup.sql script, which builds the 
##          test tables and loads test data into it.
##      main.sh run
##          Runs all tests. Test output is saved in .log files
##          and compared to reference files (.req) is existing.
##          If log and reference file is identical "test passed"
##          is printed, if different "test failed". If no
##          reference file exists, "unknown" is displayed.
##      main.sh clean
##          Removes all log and error files.
##      main.sh save
##          Saves all log files as reference files. Existing
##          reference files are lost! You should save log
##          files as reference files ONLY if you have inspected
##          them and are sure they are correct.
## 
## ###############################################################

TESTFILES="\
	regexp_extract \
	regexp_match \
	regexp_replace \
        regexp_split "
	

USER_FILE=user.sh
RM="rm -f"
CP="cp"
DIFF=diff

runUserCommand()
{
    if [ -r $USER_FILE ]
    then
	$USER_FILE $1
    fi
}

checkResult()
{
    if [ -r $1.req ]
    then
	$DIFF $1.log $1.req >$1.diff
	if [ $? != 0 ]
	then
	    echo "  $1: failed"
	else
	    $RM $1.diff
	    echo "  $1: passed"
	fi
    else
	echo "  $1: unknown (no reference file)"
    fi
}

runScript()
{
    if [ -r $1.sql ]
    then
	which dbaccess > nul
	if [ $? -eq 0 ]
	then
	    dbaccess -e $TESTDB $1.sql >$1.log 2>&1
	else
	    if [ ! -n "${DBSERVER-}" ]
	    then
		echo You must set the environment variable DBSERVER
		exit 1
	    fi
	    sqleditor200 /ns /min /ignoreerr /s $DBSERVER /d $TESTDB $1.sql /exec /output $1.log /exit
	fi
	if [ $# = 1 ]
	then
	    checkResult $1
	fi
    elif [ -r $1.sh ]
    then
	$1.sh >$1.log 2>&1
	checkResult $1
    fi
}

buildTest()
{
    runScript setup -nodiff
    runUserCommand build
}

runTest()
{
    for i in $TESTFILES
    do
        runScript $i
    done

    runUserCommand run;
}

cleanTest()
{
    for i in *.log
    do
	$RM $i
    done

    runUserCommand clean
    runScript cleanup -nodiff
}

saveTest()
{
    for i in *.log
    do
	$CP $i `basename $i .log`.req
    done
}


main()
{
    if [ ! -n "${TESTDB-}" ]
    then
	echo You must set the environment variable TESTDB
	exit 1
    fi

    while test "$1"
    do
	case $1 in
	all)
	    buildTest;
	    runTest;
	    cleanTest;
	    ;;
	build)
	    buildTest;
	    ;;
	clean)
	    cleanTest;
	    ;;
	run)
	    runTest
	    ;;
	save)
	    saveTest;
	    ;;
	*)
	    echo "unknown option"
	    ;;
	esac
	
	shift
    done
}

main $*;


## ###############################################################
## EOF                                                            
## ###############################################################
